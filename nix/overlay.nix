{ input, pkgs }:
hself: hsuper: {

  # dependencies

  ansi-terminal = hself.callHackageDirect {
    pkg = "ansi-terminal";
    ver = "1.1.2";
    sha256 = "sha256-Agx1UZSm9tyYM0cggX3yLE9Q58JeQHUEgeQAhb6p8co=";
  } { };

  ansi-terminal-types = hself.callHackageDirect {
    pkg = "ansi-terminal-types";
    ver = "1.1";
    sha256 = "sha256-EFVv4x0A95N+MyIg5gWKWgwlmG/lzA4+2nOoMdbzAhs=";
  } { };

  grapesy = hself.callHackageDirect {
    pkg = "grapesy";
    ver = "1.0.1";
    sha256 = "sha256-tTjOzgODdzNfgw5TZ7js0fy7N79t0R1gYR1myuwE/Eg=";
  } { };

  grpc-spec = pkgs.haskell.lib.dontCheck (
    pkgs.haskell.lib.doJailbreak (
      hself.callHackageDirect {
        pkg = "grpc-spec";
        ver = "1.0.0";
        sha256 = "sha256-aMlta6tWUa/xzz0X1WzGYZwbJLow8v6dK6yYa+Yw+F0=";
      } { }
    )
  );

  network = hself.callHackageDirect {
    pkg = "network";
    ver = "3.2.7.0";
    sha256 = "sha256-QJCy1P8R/ghy1Y9odCNgEaDsgaTu10qxSksIUl+q2SE=";
  } { };

  network-run = hself.callHackageDirect {
    pkg = "network-run";
    ver = "0.4.4";
    sha256 = "sha256-/Gryr/icHP+KToDL9veikhFQQ4k+ebh04urHuVK9XDA=";
  } { };

  proto-lens = pkgs.haskell.lib.doJailbreak hsuper.proto-lens;

  proto-lens-protobuf-types = pkgs.haskell.lib.doJailbreak hsuper.proto-lens-protobuf-types;

  proto-lens-protoc =
    pkgs.haskell.lib.appendPatch (pkgs.haskell.lib.doJailbreak hsuper.proto-lens-protoc)
      (
        pkgs.fetchpatch {
          url = "https://github.com/google/proto-lens/commit/c058cdfe8b267ca5e4b149f6979fbc24ff2be2b4.diff";
          relative = "proto-lens-protoc";
          # There's a patch conflict in the autogenerated hpack header (rolling
          # my eyes hugely).
          excludes = [
            "package.yaml"
            "proto-lens-protoc.cabal"
          ];
          hash = "sha256-qpBh8XGwb30VjIb0VGrLhu/k5az6QrL8XioE9pxDtw4=";
        }
      );

  proto-lens-runtime = pkgs.haskell.lib.doJailbreak hsuper.proto-lens-runtime;

  proto-lens-setup = pkgs.haskell.lib.doJailbreak hsuper.proto-lens-setup;

  serialise = pkgs.haskell.lib.overrideCabal (pkgs.haskell.lib.doJailbreak hsuper.serialise) (drv: {
    patches = (drv.patches or [ ]) ++ [
      # Fix build with quickcheck-instances-0.3.32
      # https://github.com/well-typed/cborg/pull/342
      (pkgs.fetchpatch {
        url = "https://github.com/well-typed/cborg/commit/7f65f316e653684e7af7e4a0f171a98b4e0219bb.diff";
        relative = "serialise";
        hash = "sha256-hQT1Ts+NqFXRHt897jkmzPkppWABmdK4D/cUfKdUkBk=";
      })
    ];
  });

  snappy-c =
    (pkgs.haskell.lib.doJailbreak (
      hself.callHackageDirect {
        pkg = "snappy-c";
        ver = "0.1.1";
        sha256 = "sha256-lUEPxlVRrA20KLwa8unE32ygMNxm1c32UgplyBvkkfI=";
      } { }
    )).overrideAttrs
      (old: {
        buildInputs = old.buildInputs ++ [ pkgs.snappy ];
      });

  tls = hself.callHackageDirect {
    pkg = "tls";
    ver = "2.1.5";
    sha256 = "sha256-A55XnGgstXYMva15AaSEgGECFJmtDp96r3kh+zRFCc0=";
  } { };

  # Finally, ghc-persistent-worker packages

  ghc-persistent-worker-plugin = hself.callCabal2nix "ghc-persistent-worker-plugin" (
    input.ghc-persistent-worker + "/plugin"
  ) { };

  buck-worker = pkgs.haskell.lib.dontCheck (
    hself.callCabal2nix "buck-worker" (input.ghc-persistent-worker + "/buck-worker") { }
  );

  buck-multiplex-worker = pkgs.haskell.lib.dontCheck (
    hself.callCabal2nix "buck-multiplex-worker" (
      input.ghc-persistent-worker + "/buck-multiplex-worker"
    ) { }
  );

}
